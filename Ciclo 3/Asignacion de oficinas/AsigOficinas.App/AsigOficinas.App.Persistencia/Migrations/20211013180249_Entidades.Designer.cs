// <auto-generated />
using System;
using AsigOficinas.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsigOficinas.App.Persistencia.Migrations
{
    [DbContext(typeof(appContext))]
    [Migration("20211013180249_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AsigOficinas.App.Dominio.Diagnostico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("fechaDiagnostico")
                        .HasColumnType("datetime2");

                    b.Property<string>("sintomas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Diagnostico");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Gobernacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Gobernacion");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Oficina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Sedeid")
                        .HasColumnType("int");

                    b.Property<int?>("Sistemaid")
                        .HasColumnType("int");

                    b.Property<int>("aforo")
                        .HasColumnType("int");

                    b.Property<bool>("estadoOficina")
                        .HasColumnType("bit");

                    b.Property<string>("horaLaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Sedeid");

                    b.HasIndex("Sistemaid");

                    b.ToTable("Oficina");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Oficinaid")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("diagnosticoid")
                        .HasColumnType("int");

                    b.Property<byte>("edad")
                        .HasColumnType("tinyint");

                    b.Property<bool>("estadoCovid")
                        .HasColumnType("bit");

                    b.Property<long>("identificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Oficinaid");

                    b.HasIndex("diagnosticoid");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Registro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("id");

                    b.ToTable("Registro");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Sede", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Gobernacionid")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Gobernacionid");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Sistema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("id");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.GobernadorYAsesor", b =>
                {
                    b.HasBaseType("AsigOficinas.App.Dominio.Persona");

                    b.Property<string>("oficinasVisitadas")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("GobernadorYAsesor");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.PersonalDeAseo", b =>
                {
                    b.HasBaseType("AsigOficinas.App.Dominio.Persona");

                    b.Property<string>("turnoDesarrolloServicio")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PersonalDeAseo");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.ProveedorDeServicios", b =>
                {
                    b.HasBaseType("AsigOficinas.App.Dominio.Persona");

                    b.Property<string>("servicioRealizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("undDesarrolloServicio")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProveedorDeServicios");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.SecretarioDeDespacho", b =>
                {
                    b.HasBaseType("AsigOficinas.App.Dominio.Persona");

                    b.Property<string>("despacho")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("SecretarioDeDespacho");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Oficina", b =>
                {
                    b.HasOne("AsigOficinas.App.Dominio.Sede", null)
                        .WithMany("oficinas")
                        .HasForeignKey("Sedeid");

                    b.HasOne("AsigOficinas.App.Dominio.Sistema", null)
                        .WithMany("oficina")
                        .HasForeignKey("Sistemaid");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Persona", b =>
                {
                    b.HasOne("AsigOficinas.App.Dominio.Oficina", null)
                        .WithMany("numeroPersonas")
                        .HasForeignKey("Oficinaid");

                    b.HasOne("AsigOficinas.App.Dominio.Diagnostico", "diagnostico")
                        .WithMany()
                        .HasForeignKey("diagnosticoid");

                    b.Navigation("diagnostico");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Sede", b =>
                {
                    b.HasOne("AsigOficinas.App.Dominio.Gobernacion", null)
                        .WithMany("sedes")
                        .HasForeignKey("Gobernacionid");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Gobernacion", b =>
                {
                    b.Navigation("sedes");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Oficina", b =>
                {
                    b.Navigation("numeroPersonas");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Sede", b =>
                {
                    b.Navigation("oficinas");
                });

            modelBuilder.Entity("AsigOficinas.App.Dominio.Sistema", b =>
                {
                    b.Navigation("oficina");
                });
#pragma warning restore 612, 618
        }
    }
}
